<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ActiveLong" xml:space="preserve">
    <value>Visit Active</value>
  </data>
  <data name="AddedVisitMsg" xml:space="preserve">
    <value>Visit Added.</value>
  </data>
  <data name="AddVisit" xml:space="preserve">
    <value>Add Visit</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangesSavedMsg" xml:space="preserve">
    <value>Changes Saved.</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="ContactPerson" xml:space="preserve">
    <value>Contact Person</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeletedVisitMsg" xml:space="preserve">
    <value>Visit Deleted.</value>
  </data>
  <data name="DeleteVisit" xml:space="preserve">
    <value>Delete Visit</value>
  </data>
  <data name="DeleteVisitPrompt" xml:space="preserve">
    <value>Do you really want to delete this visitor? This process cannot be undone.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>People who have visited in the past 14 days</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditVisit" xml:space="preserve">
    <value>Edit Visit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="LangLong" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="LangShort" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="Over" xml:space="preserve">
    <value>Over</value>
  </data>
  <data name="OverLong" xml:space="preserve">
    <value>Visit Over</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="PendingLong" xml:space="preserve">
    <value>Visit Pending</value>
  </data>
  <data name="PhoneNr" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SignedOutVisitor" xml:space="preserve">
    <value>Visitor signed out</value>
  </data>
  <data name="SignOutPrompt" xml:space="preserve">
    <value>Do you really want to sign this visitor out? This process cannot be undone.</value>
  </data>
  <data name="SignOutVisitor" xml:space="preserve">
    <value>Sign out visitor</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Visitors</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="FinishRegister" xml:space="preserve">
    <value>Finish Registration</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="QRSigninHint" xml:space="preserve">
    <value>Scan ticket to Sign in / Sign out</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterSuccess" xml:space="preserve">
    <value>Visit has been successfully recorded</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="SafetyInfoNotRead" xml:space="preserve">
    <value>The safety information must have been read</value>
  </data>
  <data name="SafetyInfoRead" xml:space="preserve">
    <value>I have read the safety information above</value>
  </data>
  <data name="VisitorRegistration" xml:space="preserve">
    <value>Visitor Registration</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome at NBG</value>
  </data>
  <data name="WrongEmail" xml:space="preserve">
    <value>The email address is invalid</value>
  </data>
  <data name="WrongPhone" xml:space="preserve">
    <value>The phone number is invalid</value>
  </data>
  <data name="Arrival" xml:space="preserve">
    <value>Arrival</value>
  </data>
  <data name="PlannedArrival" xml:space="preserve">
    <value>Planned Arrival</value>
  </data>
  <data name="VisitorTicket" xml:space="preserve">
    <value>Visitor Ticket</value>
  </data>
  <data name="PlannedDate" xml:space="preserve">
    <value>Planned Date</value>
  </data>
  <data name="PlannedTime" xml:space="preserve">
    <value>Planned Time</value>
  </data>
  <data name="MissingDataPrompt" xml:space="preserve">
    <value>Bitte geben Sie die Daten ein.</value>
  </data>
  <data name="PickEndDatePrompt" xml:space="preserve">
    <value>Fill in the end date below.</value>
  </data>
  <data name="PrintVisitorPass" xml:space="preserve">
    <value>Print Visitor Pass</value>
  </data>
  <data name="InvalidQR" xml:space="preserve">
    <value>QR code invalid</value>
  </data>
  <data name="ConfirmSignOut" xml:space="preserve">
    <value>Are you sure you want to sign out?</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="RequiredFields" xml:space="preserve">
    <value>Required fields</value>
  </data>
  <data name="SafetyInfo" xml:space="preserve">
    <value>Safety Advice</value>
  </data>
  <data name="ClearFields" xml:space="preserve">
    <value>Clear fields</value>
  </data>
  <data name="AllSignedOutPrompt" xml:space="preserve">
    <value>All active visitors have been signed out.</value>
  </data>
  <data name="NoVisitsPrompt" xml:space="preserve">
    <value>No visits found.</value>
  </data>
  <data name="GDPRRegisterInfo" xml:space="preserve">
    <value>Data will be kept for up to two week in compliance with the GDPR.</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>More Information</value>
  </data>
  <data name="GDPRInfo" xml:space="preserve">
    <value>Information regarding the GDPR</value>
  </data>
</root>