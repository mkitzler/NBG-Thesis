@using Microsoft.JSInterop
@using NBG.Visitor.Domain.Commands;
@using MudBlazor;
@using System.Reflection
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS;

<style>
    .datetimecontainer{
        display:flex;
        justify-content: space-between;
        width: 100%;
    }
</style>

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Logout" Class="mr-3 mb-n1"/>
            @Loc["SignOutVisitor"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Class="mb-4">
            @Loc["SignOutPrompt"]
            @Loc["PickEndDatePrompt"]
        </MudText>
        <MudForm>
            <div class="datetimecontainer">
                <MudDatePicker Label=@Loc["EndDate"] @bind-Date="@endDate" Culture="@Loc.Culture" Style="width:90%;" DisableToolbar="true"/>    
                <MudTimePicker Label=@Loc["EndTime"] @bind-Time="@endTime" Culture="@Loc.Culture" AmPm="@((Loc.Culture.ToString() == "en-US")? true : false )"/>
            </div>
            <MudText Class="mt-4" Style="@($"color:{Colors.Red.Default};")" hidden="@errorHidden">
                @Loc["MissingDataPrompt"]
            </MudText>
            <div class="d-flex justify-end mt-6">
                <MudButton Class="pa-2 mx-2" OnClick="Cancel" Variant="Variant.Filled">@Loc["Cancel"]</MudButton>
                <MudButton Class="pa-2 mx-2" Color="Color.Warning" OnClick="SignOutVisitor" Variant="Variant.Filled">OK</MudButton>
            </div>
        </MudForm>  
    </DialogContent>
</MudDialog>
 
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public VisitDto visit { get; set; } = new VisitDto();
    [Parameter] public NBG.Visitor.Blazor.Localizer Loc { get; set; }

    private DateTime? endDate { get; set; }
    private TimeSpan? endTime { get; set; }

    bool errorHidden {  get;  set; } = true;

    void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        endDate = @visit.VisitEnd ?? null;
        if (@visit.VisitEnd != null)
            endTime = @visit.VisitEnd.Value.TimeOfDay;
        else
            endTime = null;
    }

    private void SignOutVisitor()
    {
        if (endDate != null && endTime != null)
        {
            errorHidden = true;
            endDate -= endDate.Value.TimeOfDay;
            endDate += endTime;
            visit.VisitEnd = endDate??null;
            MudDialog.Close(DialogResult.Ok(visit));
        }
        else
        {
            errorHidden = false;
        }
    }
}

